#!/bin/bash

declare -a counts freq cmds filters
line_len=$(($(/usr/bin/tput cols) - 2)) # get terminal width
num_entries=15
chart_char='='
OPTIND=1 # reset getopts
max_len=0
ppid=$PPID

# define colors
lpurple="\033[1;35m"
lcyan="\033[1;36m"
white="\033[1;37m"

nocolor='\033[0m' # no color

color1=$lcyan
color2=$lpurple

in="$(</dev/stdin)"

function show_help() {
  echo "\
Usage: $0 [-h] [-n entries] [-c chart_char] [-l line_len]
$0 generates a bar chart of from a list of "NUMBER NAME" entries

Options:
  -n NUM        number of entries to include in the chart, default $num_entries
  -c CHAR       character to use for chart bars, default '='
  -l NUM        width of chart, default width of terminal

Miscellaneous:
  -h            display this help message and exit

Report bugs to: https://github.com/crclark96/ginh/issues"
}

while getopts "h?n:c:l:" opt; do
  case "$opt" in
  h|\?)
    show_help
    exit 0
    ;;
  d)
    debug
    exit 0
    ;;
  n)
    num_entries=$OPTARG
    ;;
  f)
    histfile=$OPTARG
    alias=0
    ;;
  c)
    chart_char="$OPTARG"
    ;;
  l)
    line_len=$OPTARG
    ;;
  t)
    ppid=$OPTARG
    ;;
  a)
    alias=0
    ;;
  esac
done

shift $((OPTIND-1))

# choose smaller of requested number of entries and actual number
num_lines=$(wc -l <<< "$in")
num_entries=$((num_lines < num_entries
                ? num_lines
                : num_entries))

for (( n=0; n<num_entries; n++ )); do
# gather counts and cmds
  cmds[n]=$(sed -ne "$((1 + n))p" <<< "$in") # isolate line n+1
  counts[n]=$(awk '{print $1}' <<< "${cmds[n]}")
  s=$(awk '{print $2}' <<< "${cmds[n]}")
  max_len=$((
  ${#s} > max_len
    ? ${#s}
    : max_len
  ))
done

max_len=$((max_len + 1))

for (( n=0; n<num_entries; n++ )); do
# calculate frequencies
  (( freq[n]=counts[n] * \
    $((line_len - max_len - ${#counts[0]} - 2)) \
    / counts[0] ))
done

for (( n=0; n<num_entries; n++ )); do
  if [[ $((n % 2)) == 0 ]]; then
    color=$color1
  else
    color=$color2
  fi
  s=$(awk '{print $2}' <<< "${cmds[n]}")
  for (( m=0; m<=max_len-${#s} - 2; m++ )); do
    printf " "
  done
  printf "${color}%s${nocolor} " "$(awk '{print $2}' <<< "${cmds[n]}")"

  for (( m=0; m<=freq[n]; m++ )); do
    printf "${color}%s${nocolor}" "$chart_char"
  done

  printf "  "
  printf "${color}%s${nocolor}" "${counts[n]}"

  printf "\\n"
done

